# GENERATED FILE - DO NOT EDIT THIS FILE UNLESS YOU ARE A WIZZARD
#pylint:  skip-file
from heat.engine import properties
from heat.engine import constraints
from heat.engine import attributes
from heat.common.i18n import _
from avi.heat.avi_resource import AviResource
from options import *

from options import *


class AttackMetaData(object):
    # all schemas
    url_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=False,
    )
    ip_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=False,
    )
    max_resp_time_schema = properties.Schema(
        properties.Schema.NUMBER,
        _(""),
        required=False,
    )

    # properties list
    PROPERTIES = (
        'url',
        'ip',
        'max_resp_time',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'url': url_schema,
        'ip': ip_schema,
        'max_resp_time': max_resp_time_schema,
    }


class DosThreshold(object):
    # all schemas
    attack_schema = properties.Schema(
        properties.Schema.STRING,
        _("Attack type."),
        required=True,
    )
    min_value_schema = properties.Schema(
        properties.Schema.NUMBER,
        _("Minimum number of packets or connections or requests in a given interval of time to be deemed as attack."),
        required=True,
    )
    max_value_schema = properties.Schema(
        properties.Schema.NUMBER,
        _("Maximum number of packets or connections or requests in a given interval of time to be deemed as attack."),
        required=True,
    )

    # properties list
    PROPERTIES = (
        'attack',
        'min_value',
        'max_value',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'attack': attack_schema,
        'min_value': min_value_schema,
        'max_value': max_value_schema,
    }


class DosAttackEventDetails(object):
    # all schemas
    attack_count_schema = properties.Schema(
        properties.Schema.NUMBER,
        _(""),
        required=True,
    )
    attack_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=True,
    )
    src_ips_item_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=True,
    )
    src_ips_schema = properties.Schema(
        properties.Schema.LIST,
        _(""),
        schema=src_ips_item_schema,
        required=False,
    )
    urls_item_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=True,
    )
    urls_schema = properties.Schema(
        properties.Schema.LIST,
        _(""),
        schema=urls_item_schema,
        required=False,
    )
    ipgroup_uuids_item_schema = properties.Schema(
        properties.Schema.STRING,
        _(""),
        required=True,
    )
    ipgroup_uuids_schema = properties.Schema(
        properties.Schema.LIST,
        _(""),
        schema=ipgroup_uuids_item_schema,
        required=False,
    )
    meta_data_item_schema = properties.Schema(
        properties.Schema.MAP,
        _(""),
        schema=AttackMetaData.properties_schema,
        required=True,
    )
    meta_data_schema = properties.Schema(
        properties.Schema.LIST,
        _(""),
        schema=meta_data_item_schema,
        required=False,
    )

    # properties list
    PROPERTIES = (
        'attack_count',
        'attack',
        'src_ips',
        'urls',
        'ipgroup_uuids',
        'meta_data',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'attack_count': attack_count_schema,
        'attack': attack_schema,
        'src_ips': src_ips_schema,
        'urls': urls_schema,
        'ipgroup_uuids': ipgroup_uuids_schema,
        'meta_data': meta_data_schema,
    }


class DosThresholdProfile(object):
    # all schemas
    thresh_period_schema = properties.Schema(
        properties.Schema.NUMBER,
        _("Timer value in seconds to collect DoS attack metrics based on threshold on the Service Engine for this Virtual Service."),
        required=True,
    )
    thresh_info_item_schema = properties.Schema(
        properties.Schema.MAP,
        _(""),
        schema=DosThreshold.properties_schema,
        required=True,
    )
    thresh_info_schema = properties.Schema(
        properties.Schema.LIST,
        _("Attack type, min and max values for DoS attack detection."),
        schema=thresh_info_item_schema,
        required=False,
    )

    # properties list
    PROPERTIES = (
        'thresh_period',
        'thresh_info',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'thresh_period': thresh_period_schema,
        'thresh_info': thresh_info_schema,
    }
