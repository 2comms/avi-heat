# GENERATED FILE - DO NOT EDIT THIS FILE UNLESS YOU ARE A WIZZARD
#pylint:  skip-file
from heat.engine import properties
from heat.engine import constraints
from heat.engine import attributes
from heat.common.i18n import _
from avi.heat.avi_resource import AviResource
from options import *

from options import *


class SystemUpgradeStarted(object):
    # all schemas
    current_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Current Avi CADP version."),
        required=False,
    )
    next_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Target version of Avi CADP."),
        required=False,
    )

    # properties list
    PROPERTIES = (
        'current_version',
        'next_version',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'current_version': current_version_schema,
        'next_version': next_version_schema,
    }


class SeVersionCheckFailedEvent(object):
    # all schemas
    se_uuid_schema = properties.Schema(
        properties.Schema.STRING,
        _("UUID of the SE."),
        required=False,
    )
    se_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Software version on the SE."),
        required=False,
    )
    controller_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Software version on the controller."),
        required=False,
    )

    # properties list
    PROPERTIES = (
        'se_uuid',
        'se_version',
        'controller_version',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'se_uuid': se_uuid_schema,
        'se_version': se_version_schema,
        'controller_version': controller_version_schema,
    }


class SystemUpgradeComplete(object):
    # all schemas
    current_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Current Avi CADP version."),
        required=False,
    )

    # properties list
    PROPERTIES = (
        'current_version',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'current_version': current_version_schema,
    }


class SystemUpgradeAborted(object):
    # all schemas
    current_version_schema = properties.Schema(
        properties.Schema.STRING,
        _("Current Avi CADP version."),
        required=False,
    )

    # properties list
    PROPERTIES = (
        'current_version',
    )

    # mapping of properties to their schemas
    properties_schema = {
        'current_version': current_version_schema,
    }
